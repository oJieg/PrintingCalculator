@model printing_calculator.ViewModels.PaperAndHistoryInput
@using printing_calculator.ViewModels;
@using printing_calculator.DataBase;
@{
    Layout = "_Layout";
    int sizeMinValue = 30;
    int HightMaxValue = 1500;
    int WidthMaxValue = 1500;

    InputHistory input;
    if (Model.Input != null)
    {
        input = Model.Input;
    }
    else
    {
        input = new()
                {
                    Height = 297,
                    Whidth = 420,
                    Amount = 1,
                    Duplex = true,
                    Kinds = 1,
                    CreasingAmount = 0,
                    DrillingAmount = 0,
                    RoundingAmount = false,
                    Lamination = new Lamination(),
                    SpringBrochure = SpringBrochure.None
                };
    }
}

@section Style {
    <link rel="stylesheet" type="text/css" href="/calculator.css">
}

@section JS{
    <script src="/ActiveSize.js"></script>
}
<div class="main-body">
    <form name="my1" class="flex">
        <h2 class="nameCalc"> Калькулятор</h2>
        @{
            string selectedSpring = string.Empty;
            if (input.SpringBrochure != SpringBrochure.None)
            {
                selectedSpring = "selected";
            }

        }
        <select class="selectorMenu" id="Brochure" onchange="brochure(this.value)">
            <option value="none">-</option>
            <option value="spring" @selectedSpring>Пружина</option>
            <option value="staple">скрепка</option>
        </select>

        @{
            int polosValue = input.Kinds;
            if (input.Duplex)
            {
                polosValue = polosValue * 2;
            }
        }
        <div id="spring" class="flex" style="display: none;">
            <div class="horizontalInput">
                <div class="nameAndInput">
                    <label class="labletext" for="Height">Полос</label>
                    <input class="inputNumber" id="Polos" type="number" name="Polos" required="" value="@polosValue"
                           min="1" max="1500" onchange="editPolos()">
                </div>
                <div class="nameAndInput">
                    <label class="labletext" for="Height">Кол-во броющюр</label>
                    <input class="inputNumber" id="BrochureAmout" type="number" name="Polos" required=""
                           value="@input.Amount" min="1" max="1500" onchange="editPolos()">
                </div>
            </div>
            @{
                string noCover = input.SpringBrochure == SpringBrochure.NoCover ? "selected" : string.Empty;
                string CoverPlasticAndCardboard = input.SpringBrochure == SpringBrochure.CoverPlasticAndCardboard ? "selected" : string.Empty;
                string CoverTwoPlastics = input.SpringBrochure == SpringBrochure.CoverTwoPlastics ? "selected" : string.Empty;
            }
            <select class="selectorMenu" id="BrochureSpring">
                <option value="noCover" @noCover>без подложки/обложки</option>
                <option value="CoverPlasticAndCardboard" @CoverPlasticAndCardboard>обложка пастик/подложка картон</option>
                <option value="CoverTwoPlastics" @CoverTwoPlastics>два пластика</option>
            </select>
        </div>

        <div id="Staple" class="flex" style="display: none;">


            <div class="horizontalInput">
                <div class="nameAndInput">
                    <label class="labletext" for="Height">Полос</label>
                    <input class="inputNumber" id="PolosStaple" type="number" name="Polos" required="" value="1"
                           min="1" max="1500" onchange="editPolosStaple()">
                    <span class="tooltiptext" id="tooltiptext">Страниц не кратно 4м</span>
                </div>
                <div class="nameAndInput">
                    <label class="labletext" for="Height">Кол-во броющюр</label>
                    <input class="inputNumber" id="BrochureAmoutStaple" type="number" name="Polos" required=""
                           value="1" min="1" max="1500" onchange="editPolosStaple()">
                </div>
            </div>

            <div class="FastSizeBlockStaple">
                <input class="FastSize" id="210297" type="button" onclick="editSizeStaple(210,297);calkSizeStaple()" value="А4">
                <input class="FastSize" id="148210" type="button" onclick="editSizeStaple(148,210);calkSizeStaple()" value="А5">
                <input class="FastSize" id="105148" type="button" onclick="editSizeStaple(105,148);calkSizeStaple()" value="А6">
            </div>

            <p class="labletext" for="Height" style="margin-bottom: 0px;">размер полосы</p>
            <div class="horizontalInput" style="padding-top: 0px;">
                <div class="nameAndInput" style="padding-top: 0px;">
                    <label class="labletext" for="Height">по горизонтали</label>
                    <input class="inputNumber" id="HeightBrochureStaple" type="number" name="Height" required=""
                           value="210" min="30" max="1500" onchange="newSize(this.value, 'Height');calkSizeStaple()">
                </div>
                <div class="nameAndInput" style="padding-top: 0px;">
                    <label class="labletext" for="Height">по вертикали</label>
                    <input class="inputNumber" id="WidthBrochureStaple" type="number" name="Whidth" required=""
                           value="297" min="30" max="1500" onchange="newSize(this.value, 'Height');calkSizeStaple()">
                </div>
            </div>

        </div>

        <div id="invizibleFastHover">
            <div class="FastSizeBlock" id="invizibleFastHover">
                <input class="FastHover" id="297420" type="button" onclick="editSize(420,297);" value="А3">
                <input class="FastSize" id="210297" type="button" onclick="editSize(210,297);" value="А4">
                <input class="FastSize" id="148210" type="button" onclick="editSize(148,210);" value="А5">
                <input class="FastSize" id="105148" type="button" onclick="editSize(105,148);" value="А6">
                <input class="FastSize" id="100150" type="button" onclick="editSize(100,150);" value="10x15">
                <input class="FastSize" id="5090" type="button" onclick="editSize(90,50);" value="9x5">
            </div>
        </div>


        <div class="horizontalInput" id="opacitySize">

            <div class="nameAndInput">
                <label class="labletext" for="Height">ширина макета</label>
                <input class="inputNumber" id="Height" type="number" name="Height" required value="@input.Height" min="@sizeMinValue" max="@HightMaxValue" onchange="newSize(this.value, 'Height')">
            </div>
            <div class="nameAndInput">
                <label class="labletext" for="Height">высота макета</label>
                <input class="inputNumber" id="Width" type="number" name="Whidth" required value="@input.Whidth" min="@sizeMinValue" max="@WidthMaxValue" onchange="newSize(this.value, 'Width')">
            </div>
        </div>


        <div class="nameAndInput">
            <label class="labletext" for="Height">бумагу выбери</label>
            <select class="selectorMenu" id="Paper">
                @foreach (PaperCatalog paper in @Model.Paper)
                {
                    string selected = string.Empty;
                    if (paper == input.Paper)
                    {
                        selected = "selected";
                    }
                    <option value="@paper.Name" @selected>@paper.Name</option>
                }
            </select>
        </div>

        <div class="Diaphanous">
            <div class="horizontalInput">
                <div class="nameAndInput">
                    <label class="labletext" for="Height">тираж</label>
                    <input class="inputNumber" type="number" id="Amount" required value="@input.Amount" min="1">
                </div>
                <div class="nameAndInput">
                    <label class="labletext" for="Height">Видов</label>
                    <input class="inputNumber" type="number" id="Kinds" required value="@input.Kinds" min="1">
                </div>
            </div>
        </div>

        @{
            string nonDuplex = string.Empty;
            string duplex = string.Empty;
            if (input.Duplex)
            {
                duplex = "checked";
            }
            else
            {
                nonDuplex = "checked";
            }
        }

        <div class="horizontalInput">
            <div class="radio">
                <label class="custom-checkbox">
                    <input type="radio" name="Duplex" @nonDuplex value="false">
                    <span>4+0</span>
                </label>
            </div>
            <div class="radio">
                <label class="custom-checkbox">
                    <input type="radio" id="Duplex" name="Duplex" @duplex value="true">
                    <span>4+4</span>
                </label>
            </div>
        </div>

        <div class="Diaphanous">
            <div class="nameAndInput">
                <label class="labletext" for="Height">ламинация</label>
                <select class="selectorMenu" id="LaminationName">
                    <option value="" ">---</option>
                    @foreach (Lamination lamination in @Model.Lamination)
                    {
                        string selected = string.Empty;
                        if (input.Lamination != null && lamination.Name == input.Lamination.Name)
                        {
                            selected = "selected";
                        }
                        <option value="@lamination.Name" @selected>@lamination.Name</option>
                    }
                </select>
            </div>
        </div>

        <div class="Diaphanous">
            <div class="nameAndInput">
                <label class="labletext" for="Height">Биговки</label>
                <input class="inputNumber" type="number" id="Creasing" required value="@input.CreasingAmount">
            </div>
        </div>

        <div class="Diaphanous">
            <div class="nameAndInput">
                <label class="labletext" for="Height">Сверление(дырок)</label>
                <input class="inputNumber" type="number" id="Drilling" required value="@input.DrillingAmount">
            </div>
        </div>

                    @{
                        string selectedRounding = string.Empty;
                        if (input.RoundingAmount)
                        {
                            selectedRounding = "checked";
                        }
                    }
        <div class="Diaphanous">
            <div class="radio">
                <label class="custom-checkbox">
                    <input type="checkbox" id="Rounding" @selectedRounding value="true">
                    <span>Скругление углов</span>
                </label>
            </div>
        </div>

                    @for (int i = 0; i < Model.commonToAllMarkups.Count; i++)
                    {
            <div class="radio">
                <label class="custom-checkbox">
                    <input type="checkbox" name="CommonToAllMarkup" value="@Model.commonToAllMarkups[i].Name">
                    <span>@Model.commonToAllMarkups[i].Description</span>
                </label>
            </div>
                    }


        <div class="button">
            <input class="buttonNext" type="button" onclick="calk();" value="Расчитать">
        </div>
    </form>
</div>