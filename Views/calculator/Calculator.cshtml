@model printing_calculator.ViewModels.PaperAndHistoryInput
@using printing_calculator.ViewModels;
@using printing_calculator.DataBase;
@{
	Layout = "_Layout";
	int sizeMinValue = 30;
	int HightMaxValue = 1500;
	int WidthMaxValue = 1500;

	InputHistory input;
	if (Model.Input != null)
	{
		input = Model.Input;
	}
	else
	{
		input = new()
				{
					Height = 297,
					Whidth = 420,
					Amount = 1,
					Duplex = true,
					Kinds = 1,
					CreasingAmount = 0,
					DrillingAmount = 0,
					RoundingAmount = false,
					Lamination = new Lamination()
				};
	}
}

@section Style {
	<link rel="stylesheet" type="text/css" href="/calculator.css">
}

@section JS{
	<script src="/ActiveSize.js"></script>
}

<form name="my1" class="flex">
	<h2 class="nameCalc"> Калькулятор</h2>

	<div class="FastSizeBlock">
		<input class="FastHover" id="297420" type="button" onclick="editSize(420,297);" value="А3">
		<input class="FastSize" id="210297" type="button" onclick="editSize(210,297);" value="А4">
		<input class="FastSize" id="148210" type="button" onclick="editSize(148,210);" value="А5">
		<input class="FastSize" id="105148" type="button" onclick="editSize(105,148);" value="А6">
		<input class="FastSize" id="100150" type="button" onclick="editSize(100,150);" value="10x15">
		<input class="FastSize" id="5090" type="button" onclick="editSize(90,50);" value="9x5">
	</div>
	<div class="horizontalInput">

		<div class="nameAndInput">
			<label class="labletext" for="Height">ширина макета</label>
			<input class="inputNumber" id="Height" type="number" name="Height" required value="@input.Height" min="@sizeMinValue" max="@HightMaxValue" onchange="newSize(this.value, 'Height')">
		</div>
		<div class="nameAndInput">
			<label class="labletext" for="Height">высота макета</label>
			<input class="inputNumber" id="Width" type="number" name="Whidth" required value="@input.Whidth" min="@sizeMinValue" max="@WidthMaxValue" onchange="newSize(this.value, 'Width')">
		</div>
	</div>

	<div class="nameAndInput">
		<label class="labletext" for="Height">бумагу выбери</label>
		<select class="selectorMenu" id="Paper">
			@foreach (PaperCatalog paper in @Model.Paper)
			{
				string selected = string.Empty;
				if (paper == input.Paper)
				{
					selected = "selected";
				}
				<option value="@paper.Name" @selected>@paper.Name</option>
			}
		</select>
	</div>
	<div class="horizontalInput">
		<div class="nameAndInput">
			<label class="labletext" for="Height">тираж</label>
			<input class="inputNumber" type="number" id="Amount" required value="@input.Amount" min="1">
		</div>
		<div class="nameAndInput">
			<label class="labletext" for="Height">Видов</label>
			<input class="inputNumber" type="number" id="Kinds" required value="@input.Kinds" min="1">
		</div>
	</div>

	@{
		string nonDuplex = string.Empty;
		string duplex = string.Empty;
		if (input.Duplex)
		{
			duplex = "checked";
		}
		else
		{
			nonDuplex = "checked";
		}
	}

	<div class="horizontalInput">
		<div class="radio">
			<label class="custom-checkbox">
				<input type="radio" id="Duplex" @nonDuplex value="false">
				<span>4+0</span>
			</label>
		</div>
		<div class="radio">
			<label class="custom-checkbox">
				<input type="radio" id="Duplex" @duplex value="true">
				<span>4+4</span>
			</label>
		</div>
	</div>

	<div class="nameAndInput">
		<label class="labletext" for="Height">ламинация</label>
		<select class="selectorMenu" id="LaminationName">
			<option value="" ">---</option>
			@foreach (Lamination lamination in @Model.Lamination)
			{
			string selected = string.Empty;
			if (input.Lamination != null && lamination.Name == input.Lamination.Name)
			{
			selected = "selected";
			}
			<option value="@lamination.Name" @selected>@lamination.Name</option>
			}
		</select>
	</div>

	<div class="nameAndInput">
		<label class="labletext" for="Height">Биговки</label>
		<input class="inputNumber" type="number" id="Creasing" required value="@input.CreasingAmount">
	</div>

	<div class="nameAndInput">
		<label class="labletext" for="Height">Сверление(дырок)</label>
		<input class="inputNumber" type="number" id="Drilling" required value="@input.DrillingAmount">
	</div>

	@{
	string selectedRounding = string.Empty;
	if(input.RoundingAmount)
	{
	selectedRounding = "checked";
	}
	}
	<div class="radio">
		<label class="custom-checkbox">
			<input type="checkbox" id="Rounding" @selectedRounding value="true">
			<span>Скругление углов</span>
		</label>
	</div>

	@for(int i=0; i<Model.commonToAllMarkups.Count;i++)
	{
	<div class="radio">
		<label class="custom-checkbox">
			<input type="checkbox" name="CommonToAllMarkup" value="@Model.commonToAllMarkups[i].Name">
			<span>@Model.commonToAllMarkups[i].Description</span>
		</label>
	</div>
	}

	<div class="radio">
		<label class="custom-checkbox">
			<input type="checkbox" name="SaveDB" value="true">
			<span>не сохранять</span>
		</label>
	</div>




	<div class="button">
		<input class="buttonNext" type="submit" formmethod="post" formaction="CalculatorResult" value="Расчитать">
	</div>
	<div class="button">
		<input class="buttonNext" type="button" onclick="calk();" value="Расчитать">
	</div>
</form>